name: Build and Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build and Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        dotnet-version: ['9.0.x']
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore
    
    - name: Test with coverage (Windows)
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
    
    - name: Test with coverage (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        timeout 10m dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage || (echo "Tests timed out after 10 minutes" && exit 1)
    
    - name: Test with coverage (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        gtimeout 10m dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage || (echo "Tests timed out after 10 minutes" && exit 1)
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        directory: ./coverage
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false
        verbose: true 